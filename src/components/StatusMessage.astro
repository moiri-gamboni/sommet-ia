---
interface Props {
  id: string;
  class?: string;
  variant: 'info' | 'success' | 'error';
  message: string;
}

const { id, class: className, variant, message } = Astro.props;

const variants = {
  info: {
    icon: `
      <path
        d="M12 22C6.477 22 2 17.523 2 12S6.477 2 12 2s10 4.477 10 10-4.477 10-10 10zm0-2a8 8 0 100-16 8 8 0 000 16z"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
      />
      <path
        d="M20 12h2"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        class="opacity-25"
      />
    `,
    style: 'ring-green-900/10 text-green-600'
  },
  success: {
    icon: `
      <path
        d="M20 6L9 17l-5-5"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    `,
    style: 'ring-green-600/20 text-green-600'
  },
  error: {
    icon: `
      <path
        d="M12 9v4M12 17h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
      />
    `,
    style: 'ring-red-600/20 text-red-600'
  }
};

const currentVariant = variants[variant];
---

<div 
  id={id} 
  class:list={["hidden flex items-center gap-3 rounded-2xl p-4 bg-white backdrop-blur shadow-xl shadow-green-900/5 ring-1", currentVariant.style, className]}
>
  <svg 
    class:list={["h-5 w-5", { "animate-spin": variant === 'info' }]} 
    viewBox="0 0 24 24" 
    set:html={currentVariant.icon} 
  />
  <p class="text-sm font-medium tracking-tight text-green-900">{message}</p>
</div>