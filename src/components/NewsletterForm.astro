---
import Button from './Button.astro';
import StatusMessage from './StatusMessage.astro';
---

<form method="POST" class="newsletter-form">
  <h3 class="text-lg font-semibold tracking-tight text-green-900">
    Inscrivez-vous aux notifications <span aria-hidden="true">&darr;</span>
  </h3>
  
  <div class="mt-5 flex rounded-3xl bg-white py-2.5 pr-2.5 shadow-xl shadow-green-900/5 focus-within:ring-2 focus-within:ring-red-900">
    <input
      type="email"
      required
      name="email"
      placeholder="Adresse email"
      aria-label="Adresse email"
      class="-my-2.5 flex-auto bg-transparent pl-6 pr-2.5 text-base text-slate-900 placeholder:text-slate-400 focus:outline-none"
    />
    <Button type="submit">
      <span class="sr-only sm:not-sr-only">S'inscrire</span>
      <span class="sm:hidden">
        <svg 
          aria-hidden="true" 
          viewBox="0 0 24 24" 
          class="h-6 w-6"
        >
          <path
            d="m14 7 5 5-5 5M19 12H5"
            fill="none"
            stroke="currentColor"
            stroke-width="2"
            stroke-linecap="round"
            stroke-linejoin="round"
          />
        </svg>
      </span>
    </Button>
  </div>
  
  <div class="mt-4">
    <StatusMessage 
      id="status-info"
      variant="info"
      message="Envoi en cours..."
      class="hidden"
    />
    <StatusMessage 
      id="status-success"
      variant="success"
      message="Inscription réussie !"
      class="hidden"
    />
    <StatusMessage 
      id="status-error"
      variant="error"
      message="Une erreur est survenue. Veuillez réessayer."
      class="hidden"
    />
  </div>
</form>

<script>
  import { actions } from 'astro:actions';

  const form = document.querySelector('.newsletter-form') as HTMLFormElement;
  const statusInfo = document.getElementById('status-info');
  const statusSuccess = document.getElementById('status-success');
  const statusError = document.getElementById('status-error');

  form?.addEventListener('submit', async (event) => {
    event.preventDefault();
    
    try {
      // Hide all states and show loading
      statusSuccess?.classList.add('hidden');
      statusError?.classList.add('hidden');
      statusInfo?.classList.remove('hidden');
      
      const formData = new FormData(form);
      const { error } = await actions.newsletter(formData);
      
      if (error) throw error;
      
      // Show success
      statusInfo?.classList.add('hidden');
      statusSuccess?.classList.remove('hidden');
      form.reset();
      
      // Hide after 5 seconds
      setTimeout(() => {
        statusSuccess?.classList.add('hidden');
      }, 5000);
      
    } catch (error) {
      // Show error
      statusInfo?.classList.add('hidden');
      statusError?.classList.remove('hidden');
    }
  });
</script> 